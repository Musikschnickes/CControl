
' Konfigurationsdatei von IDI05.EXE
' =================================

' Um ein Maschinenspracheprogramm mit Hilfe von IDI05.EXE disassemblieren zu
' koennen, muss in dieser Datei festgelegt werden, wie die zu disassemblie-
' rende Datei heisst, welche Anfangsadressen verwendet werden, welcher
' Adressbereich von der Analyse ausgeschlossen wird und wo Datentabellen im
' Speicher stehen.

' Eine genaue Beschreibung der verschiedenen Optionen die in dieser Konfigu-
' rationsdatei benutzt werden koennen, befindet sich im Manual zum Disassem-
' bler (IDI05.MAN).

' -------------------------------------------------------------------------
' Als kleines Beispiel folgt eine Konfigurationsdatei zum Disassemblieren
' des ROMs eines C-Control/BASIC-Einplatinencomputers:
' -------------------------------------------------------------------------

' Der maximale Adressraum wird hier festlegt. Falls innerhalb des zu
' disassemblierenden Programms auf eine Adressen ausserhalb des Adressraum
' zugegriffen oder gesprungen wird, beendet der Disassembler die Analyse des
' Programms mit einer Fehlermeldung. In einem solchen Fall wurde vermutlich
' ein Datenbereich als Code disassembliert.

MaxAddr=$1fff                         'maximal $7ffe

' Das erste Byte von InputFile soll an die Speicheradresse 0 gelesen werden:

Org=$0

' Die drei Befehle zum Festlegen der Datenfiles muessen immer an dieser
' Stelle in der Konfigurationsdatei stehen (nach MaxAddr und Org und vor den
' anderen Optionen):

InputFile="$IDIPATH$\CCBASDMP.BIN"    'zu disassemblierendes Programm
MnemonicFile="$IDIPATH$\IDI05.MNE"    'Mnemonic-Datei (default: IDI05.MNE)
OutputFile="$IDIPATH$\CCBASDMP.OUT"   'Ausgabedatei (default: IDI05.OUT)

' Im CCBASIC-ROM wird das RAM zur Erweiterung der Adressmodi und zum Aufruf
' von User-Maschinencoderoutinen verwendet, deshalb darf der Disassembler
' Spruenge in diesen Bereich nicht weiterverfolgen, da diese Subroutinen
' nur waehrend der Programmausfuehrung zur Verfuegung stehen. Statt dessen
' wird nur ein Hinweis in der Fehlerliste ausgeben. Der Exclude-Befehl
' muss vor den anderen Optionen und nach dem Lesen der Dateien definiert
' werden! Steht in irgendeiner Tabelle oder innerhalb dieser Datei eine
' Startadresse die innerhalb des Exclude-Bereichs liegt, so wird diese
' Adresse ignoriert (es erscheint nur ein entsprechender Hinweis in der
' Fehlerliste).

Exclude=$0-$1ff

' Mit dem folgenden Befehl wird die Lage und Groesse der Interrupttabelle
' festgelegt. Bei einem MC68HC05B6 liegt sie im Bereich von Adresse $1ff2
' bis $1fff. Die Adressen der Interruptroutinen in der Tabelle werden vom
' Disassembler als Startadressen fuer die Disassemblierung benutzt.

InterruptTable=$1ff2-$1fff, "Interrupttabelle"

' Um die Routinen fuer die verschiedenen BASIC-Befehle aufzurufen, benutzt
' der CCBASIC-Interpreter eine Sprungtabelle in der die Startadressen der
' verschiedenen Routinen vermerkt sind. Alle Woerter in dieser Tabelle
' werden vom Disassembler als Startadressen verwendet.

JsrTable=$1df6-$1e9f, "Sprungtabelle mit den Startadressen der BASIC-Routinen"

' Einige Maschinensprache-Routinen werden an keiner Stelle von anderen
' Sprungbefehlen aufgerufen und deren Anfangsadressen stehen auch in keiner
' Sprungtabelle. Damit diese Routinen vom Disassembler trotzdem erkannt
' werden, muessen deren Anfangsadressen hier festgelegt werden:

JmpAddr=$0200, "Self Check ROM I"
JsrAddr=$1c7a, "Berechnungsroutine (vermutlich vom C-Compiler generiert)"
JsrAddr=$1c83, "Berechnungsroutine (vermutlich vom C-Compiler generiert)"
JsrAddr=$1c8c, "Berechnungsroutine (vermutlich vom C-Compiler generiert)"
JsrAddr=$1c9e, "Berechnungsroutine (vermutlich vom C-Compiler generiert)"

' Diese Subroutinen werden nur durch kurze Sprungbefehle aufgerufen und
' deshalb normalerweise vom Disassembler nicht mit einem Kommentarheader
' versehen:

JmpAddr=$0ad6, "RS232-Befehl ASCII-Code 1 - Einschaltmeldung ausgeben"
JmpAddr=$0aee, "RS232-Befehl ASCII-Code 2 - Serielles EEPROM programmieren"
JmpAddr=$0b42, "RS232-Befehl ASCII-Code 3 - ASCII-Dump des BASIC-Programms"

' Die folgenden Datenbereiche werden ueber das Index-Register adressiert,
' und werden hier definiert, damit sie im Ausgabelisting erscheinen:

String    = $1d76-$1dd6, "Einschaltmeldung und Copyright"
WordTable = $1dd7-$1de0, "Tabelle zum ASCII-Kodieren eines Words"
ByteTable = $1de1-$1ded, "Tabelle mit der Anzahl der Tage jeden Monats"
ByteTable = $1dee-$1df5, "Tabelle zur Dekodierung des DCF77-Signals"

' Am Ende des "Self-Check-ROM II" steht vermutlich eine Sprungtabelle, doch
' die Adressen in der Tabelle ergeben teilweise keinen Sinn, deshalb wird
' die Tabelle hier nur als einzelne Datenwords ausgegeben:

Words = $1fe2-$1ff1, "Sprungtabelle am Ende des Self-Check-ROM II (?)"

' Code-Bereiche die disassembliert im Ausgabelisting erscheinen sollen
' (werden vom Disassembler nicht analysiert):

'Code = $bd-$bf
'Code = $dd-$e0

' Wenn die folgende Option aktiv ist werden Sprungziele durch einen Doppel-
' punkt gekennzeichnet. Dadurch erhoeht sich die Lesbarkeit des Listings, da
' Adressen, auf die per brx-Befehl verzweigt wird, schneller ausfindig
' gemacht werden koennen.

MarkLabels on                           'on oder off

' Mit der folgenden Option kann festgelegt werden, ob in jedem Kommentar-
' Header einer Subroutine eine Read/Write-Sektion erscheint. Falls die
' Generierung der Sektion ausgestellt wird, erstellt der Disassembler das
' Listing sehr viel schneller. Allerdings sind die Informationen aeusserst
' nuetzlich beim Kommentieren des Listings, da mit einem Blick gesehen
' werden kann, auf welche Speicherbereiche eine Subroutine lesend oder
' schreibend zugreift.

ReadWrite on                            'on oder off

' Wenn die folgende Option auf asm gesetzt wird generiert der Disassembler
' ein Listing das (mit ein paar Einschraenkungen) gleich assembliert werden
' kann. Z.B. fehlen die stoerenden Originalbytes und es werden statt den
' Originaladressen Labels ausgegeben. Die Offsets bei der Adressierung
' mittels Index-Register und die Words in den Sprungtabellen muessen aller-
' dings noch angepasst werden!

Listing=normal                           'normal oder asm

' Mit der folgenden Option kann festgelegt werden, ob in jedem Header einer
' Subroutine bei der "called from"- und "jumped from"-Sektion die Art des
' Befehls erscheint der die Routine aufgerufen hat (JXX/BXX/TABLE). Nuetzlich
' zum Debuggen des Listings.

Species off                             'on oder off

' Mit dem Pseudo-Kommando Exit kann das Lesen der Konfigurationsdatei vor-
' zeitig beendet werden. Das ist in dieser Konfigurationsdatei nuetzlich,
' um zu vergleichen was der Disassembler mit und ohne die folgenden Name-
' Befehle in den Kommentar-Headern der Tabellen und Datenbytes ausgibt.

'Exit

' Mit dem Befehl Name kann Routinen, Tabellen oder Speicheradressen eine
' Bezeichnung gegeben werden. Diese Bezeichnung erscheint aber nur im Listing
' wenn Anfangsadressen bezeichnet werden. Z.B. ist es sinnlos eine Adresse
' innerhalb einer Subroutine zu bezeichnen.

' Belegung des Adressraums des CCBASIC-Chips

' Die Ports - sind bei jedem MC68HC05B6 gleich

Name $00,"PORTBEREICH (von Adresse $0 bis $1f):|-|PORTA (Port A data register)"
Name $01,"PORTB (Port B data register)"
Name $02,"PORTC (Port C data register)"
Name $03,"PORTD (Port D input data register)"
Name $04,"DDRA (Port A data direction register)"
Name $05,"DDRB (Port B data direction register)"
Name $06,"DDRC (Port C data direction register)"
Name $07,"EEPROM/ECLK control register"
Name $08,"A/D data register"
Name $09,"A/D status/control register"
Name $0a,"Pulse length modulation A data register"
Name $0b,"Pulse length modulation B data register"
Name $0c,"Miscellaneous register"
Name $0d,"BAUD (SCI baud rate register)"
Name $0e,"SCCR1 (SCI control register 1)"
Name $0f,"SCCR2 (SCI control register 2)"
Name $10,"SCSR (SCI status register)"
Name $11,"SCDR (SCI data register)"
Name $12,"TCR (Timer control register)"
Name $13,"TSR (Timer status register)"
Name $14,"ICR1HIGH (Input capture register 1, high byte)"
Name $15,"ICR1LOW (Input capture register 1, low byte)"
Name $16,"OCR1HIGH (Output compare register 1, high byte)"
Name $17,"OCR1LOW (Output compare register 1, low byte)"
Name $18,"TRHIGH (Timer counter register, high byte)"
Name $19,"TRLOW (Timer counter register, low byte)"
Name $1a,"ATRHIGH (Alternate timer counter register, high byte)"
Name $1b,"ATRLOW (Alternate timer counter register, low byte)"
Name $1c,"ICR2HIGH (Input capture register 2, high byte)"
Name $1d,"ICR2LOW (Input capture register 2, low byte)"
Name $1e,"OCR2HIGH (Output compare register 2, high byte)"
Name $1f,"OCR2LOW (Output compare register 2, low byte)"

' Der Zwischenbereich

Name $20,"ZWISCHENBEREICH (von Adresse $20 bis $4f):|-|Page 0 User ROM"

' Der RAM-Bereich

Name $50,"RAMBELEGUNG DURCH DEN CCBASIC-INTERPRETER (von Adresse $50 bis $ff):|-|IRQPTR (Userpointer fuer IRQ-Interrupt)"
Name $51,"CAPPTR (Userpointer fuer TIMERCAP-Interrupt)"
Name $52,"CMPPTR (Userpointer fuer TIMERCMP-Interrupt)"
Name $53,"OFLPTR (Userpointer fuer TIMEROFL-Interrupt)"
Name $54,"temporaer, fuer verschiedene Aufgaben"
Name $55,"temporaer, fuer verschiedene Aufgaben"
Name $56,"temporaer, fuer verschiedene Aufgaben"
Name $57,"temporaer, fuer verschiedene Aufgaben"
Name $58,"temporaer, fuer verschiedene Aufgaben"
Name $59,"temporaer, fuer verschiedene Aufgaben"
Name $5a,"das letzte ausgefuehrte Basic-Token (wird nur beschrieben)"
Name $5b,"Ringbuffer der seriellen Schnittstelle (RS232)"
Name $63,"Anzahl der noch zu lesenden Bytes im Ringbuffer der RS232"
Name $64,"Pointer auf das naechste zu lesende Byte im Ringbuffer der RS232"
Name $65,"Pointer auf den naechsten freien Platz im Ringbuffer der RS232"
Name $66,"EEPROM-Adressenpointer fuer sequentiellen Zugriff (high byte)"
Name $67,"EEPROM-Adressenpointer fuer sequentiellen Zugriff (low byte)"
Name $68,"Millisekundenzaehler der Uhr (high byte)
Name $69,"Millisekundenzaehler der Uhr (low byte)"
Name $6a,"DAY"
Name $6b,"DOW"
Name $6c,"Zaehler fuer aktuelle DCF77-Bitmarke"
Name $6d,"Zeit seit der letzten Zustandsaenderung des DCF77-Signals (high byte)"
Name $6e,"Zeit seit der letzten Zustandsaenderung des DCF77-Signals (low byte)"
Name $6f,"Buffer fuer neues DCF77-Kalenderjahr"
Name $70,"Buffer fuer neuen DCF77-Kalendermonat"
Name $71,"Buffer fuer neuen DCF77-Kalendertag"
Name $72,"Buffer fuer neuen DCF77-Wochentag"
Name $73,"Buffer fuer neue DCF77-Stunden"
Name $74,"Buffer fuer neue DCF77-Minuten"
Name $75,"Buffer fuer letztes DCF77-Kalenderjahr"
Name $76,"Buffer fuer letzten DCF77-Kalendermonat"
Name $77,"Buffer fuer letzten DCF77-Kalendertag"
Name $78,"Buffer fuer letzten DCF77-Wochentag"
Name $79,"Buffer fuer letzte DCF77-Stunden"
Name $7a,"Buffer fuer letzte DCF77-Minuten"
Name $7b,"allgemeines Statusregister des CCBASIC-Interpreters"
Name $7c,"FREQ1 (high byte)"
Name $7d,"FREQ1 (low byte)"
Name $7e,"FREQ2 (high byte)"
Name $7f,"FREQ2 (low byte)"
Name $80,"HOUR"
Name $81,"MINUTE"
Name $82,"MONTH"
Name $83,"Buffer zum Berechnen von OCR1 & OCR2 (high byte)"
Name $84,"Buffer zum Berechnen von OCR1 & OCR2 (low byte)"
Name $85,"Buffer fuer FREQ1 (high byte)"
Name $86,"Buffer fuer FREQ1 (low byte)"
Name $87,"Buffer fuer FREQ2 (high byte)"
Name $88,"Buffer fuer FREQ2 (low byte)"
Name $89,"SECOND"
Name $8a,"TIMER (high byte)"
Name $8b,"TIMER (low byte)"
Name $8c,"Halbe Periodendauer des BEEP-Ausgangssignals (high byte)"
Name $8d,"Halbe Periodendauer des BEEP-Ausgangssignals (low byte)"
Name $8e,"Anzahl der Ticks die bei PAUSE noch gewartet werden (high byte)"
Name $8f,"Anzahl der Ticks die bei PAUSE noch gewartet werden (low byte)"
Name $90,"YEAR"
Name $91,"Rechenstack, 7 Words lang, Word auf $91:$92 ist Top-Of-Stack:|-|"
Name $9f,"fuer Zufallszahlengenerator (high byte)"
Name $a0,"fuer Zufallszahlengenerator (low byte)"
Name $a1,"User-Variablenbereich (24 Byte lang)"
Name $b9,"EEPROM-Adresse der IRQ-BASIC-Routine (high byte)"
Name $ba,"EEPROM-Adresse der IRQ-BASIC-Routine (low byte)"
Name $bb,"Buffer fuer Aufnahme des BASIC-PCs vor IRQ (high byte)"
Name $bc,"Buffer fuer Aufnahme des BASIC-PCs vor IRQ (low byte)"
Name $bd,"Code fuer Simulation eines 'jmp adr16' Befehls (fuer SYS)"
Name $c0,"GOSUB-Stack (insgesamt 4 Eintraege, jeweils ein Word)|-|"
Name $c8,"Anzahl der Bytes in der EEPROM-Datendatei (high byte)"
Name $c9,"Anzahl der Bytes in der EEPROM-Datendatei (low byte)"
Name $ca,"Lese- oder Schreibposition in der EEPROM-Datendatei (high byte)"
Name $cb,"Lese- oder Schreibposition in der EEPROM-Datendatei (low byte)"
Name $cc,"EEPROM-Anfangsadresse der EEPROM-Datendatei (high byte)"
Name $cd,"EEPROM-Anfangsadresse der EEPROM-Datendatei (low byte)"
Name $ce,"temporaer, fuer verschiedene Aufgaben"
Name $cf,"temporaer, fuer verschiedene Aufgaben"
Name $d0,"temporaer, fuer verschiedene Aufgaben"
Name $d1,"temporaer, fuer verschiedene Aufgaben"
Name $d2,"temporaer, fuer verschiedene Aufgaben"
Name $d3,"temporaer, fuer verschiedene Aufgaben"
Name $d4,"temporaer, fuer verschiedene Aufgaben"
Name $d5,"letztes in die Datendatei uebertragene Word (high byte)"
Name $d6,"letztes in die Datendatei uebertragene Word (low byte)"
Name $d7,"letztes gelesenes Byte von der RS232"
Name $d8,"Fehlermarker fuer die RS232"
Name $d9,"temporaer, fuer verschiedene Aufgaben"
Name $da,"temporaer, fuer verschiedene Aufgaben"
Name $db,"temporaer (nur bei SQR benutzt)"
Name $dc,"nicht benutzt (?)"
Name $dd,"Code zur Erweiterung der Adressmodi, vom C-Compiler verwendet"
Name $e1,"letztes zum EEPROM uebertragene Byte"
Name $e2,"Minutendifferenz der beiden letzten DCF77-Uhrzeiten"
Name $e3,"Anzahl der Tage im aktuellen Monat (um Mitternacht)"
Name $e4,"Zwischenspeicher zum Ermitteln eines Schaltjahres"
Name $e5,"STACK-BEREICH (bis $ff, eigentlich $c0-$ff)"

' Der EEPROM-Bereich

Name $0100,"Options register (OPTR) (nur von Self-Check-ROM I benutzt)"
Name $0101,"Non protected EEPROM"
Name $0120,"Protected EEPROM"

' Der Rom-Bereich

Name $0200,"ROMBEREICH (von Adresse $200 bis $1fff):|-|Start des Self-check ROM I|-|"
Name $02c0,"unbenutztes ROM / reserviert|-|"
Name $0800,"Start des CCBASIC-ROMs|-|"
Name $1f00,"Start des Self-Check ROM II|-|"
Name $1fe2,"Sprungtabelle am Ende des Self-Check ROM II (?)"
Name $1ff2,"Adressen der Interruptroutinen"


' *** ENDE VON CCBASROM.CFG ***
